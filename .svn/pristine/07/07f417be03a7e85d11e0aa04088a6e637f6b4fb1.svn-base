<!DOCTYPE html>

<html lang="en">
    <head>
      <meta charset="utf-8">
      <title>Backbone model save 的用法</title>
    </head>
    <body>
          
       <script  src="../plug/jquery-1.8.2.min.js" type="text/javascript"></script> 
       <script  src="../plug/underscore-min.js" type="text/javascript"></script> 
       <script  src="../plug/backbone-min.js" type="text/javascript"></script> 
       <script type="text/javascript">
  /*    //步骤1：构建url地址
      var url =  "http://localhost:8080/MobileShop"+"/goods";
      //步骤2：创建Model类GoodsItem，将url地址传递进去
      var GoodsItem = Backbone.Model.extend({
         url:url,
         defaults:{
        	 name:"",sn:"",brief:"",description:"",price:"",cost:"",mktprice:"",catId:"",brandId:"",weight:"",intro:""
         }
	    });
      //步骤3：创建一个GoodsItem类的对象goods
      var goods = new GoodsItem();
      //步骤4：给goods一个商品数据，实际工作中，是通过表单输入的
      goods.set({"name":"Burberry巴宝莉红粉恋歌女士香水","sn":"sp123456","brief":"Burberry出品的Brit Sheer（红粉恋歌）便如同一位高唱恋歌的少女。","description":"30/50/100ml气质优雅包邮","price":"280","cost":"220","mktprice":"300","catId":"23","brandId":"5","weight":"200","intro":"商品品牌	Hermes / 爱马仕"});
     //步骤5：调用goods的save方法，采用POST的方式，向服务器发送XHR请求，url地址就是步骤1中的，传递的参数就是步骤4中设置的数据
      goods.save(); 
      */
     
     
     

     
    
   //If web server that doesn't support Backbone's REST/HTTP approach, then turn on 'Backbone.emulateHTTP'
      Backbone.emulateHTTP = true;

      //If web server can't handle requests encoded as application/json, then set the 'Backbone.emulateJSON' to true
      Backbone.emulateJSON = true;

      //The sync() method reads and fetch the model data
      Backbone.sync = function(method, model) {
         document.write(method + ": " + JSON.stringify(model));
         model.set('id', 1);   //Set the model with id as '1'
      };  

/*       //'Player' is a model name and contains the values to be displayed when you save the model
     var Player = new Backbone.Model({
         fname:"Sachin",
         lname:"Tendulkar"
      }); 

      //The 'save()' method saves data of the model by delegating to sync() method
      Player.save(); 

      //When you save the model, it updates the model along with this value
      Player.save({country: "india"}); */
      
 
     var url =  "http://localhost:8080/MobileShop"+"/admin_manager/backbone";
      //步骤2：创建Model类ManagerItem，将url地址传递进去
      var ManagerItem = Backbone.Model.extend({
         url:url,
         defaults:{
        	 mobile:"",realName:"",roleId:""
         }
	    });
      //步骤3：创建一个ManagerItem类的对象manager
      var manager= new ManagerItem();
      //步骤4：给manager，实际工作中是通过表单输入的
      manager.set({ mobile:"1892733234",realName:"小王",roleId:"2"});
     //步骤5：调用manager的save方法，采用POST的方式，向服务器发送XHR请求，url地址就是步骤1中的，传递的参数就是步骤4中设置的数据
      manager.save();  
     
     
     
      
       
       </script>
    </body>
</html>